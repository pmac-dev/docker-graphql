name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    # name checkout code, coge el codigo de nuestro repo
    - name: Checkout code
      uses: actions/checkout@v3
      with:
      # fetch depth, para que vaya muy dentro en la busqueda de nuestros commits
        fetch-depth: 0
        
    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        major_pattern: "major:"
        minor_pattern: "feat:"
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version
        
        
     # Ahora se autentica con Docker hub
    - name: Docker Login
      env:
      # ${{ secrets.DOCKER_USER }} lo coge de los secrets de github actions
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
       
        
      run: |
        echo "Iniciando login"
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD      
        
        echo "Fin del login"
        
    - name: Build Docker Image
      env:
         NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker build --tag pmacdev/docker-graphql:$NEW_VERSION .
        docker build --tag pmacdev/docker-graphql:latest .
        
    - name: Push Docker image
      env:
         NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
         docker push pmacdev/docker-graphql:$NEW_VERSION
         docker push pmacdev/docker-graphql:latest
         echo "New version: $NEW_VERSION!!!!!!!!"
        
        
        
        
        
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
